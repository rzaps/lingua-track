LinguaTrack — Система изучения иностранных слов с повторением, озвучкой и Telegram-поддержкой
О заказчике
Компания: LexiLab — стартап в EdTech-сегменте, работающий над цифровыми продуктами для изучения языков. Цель компании — предложить компактные, персонализированные инструменты, которые можно использовать в повседневной жизни: в метро, между встречами, в обеденный перерыв.
**Запрос:**Разработать MVP-платформу, позволяющую пользователям создавать карточки со словами, эффективно их повторять по алгоритму интервального обучения и взаимодействовать с ботом в Telegram, чтобы учить слова "на ходу".
Цель проекта
Создать удобное приложение для изучения словарного запаса иностранных языков с возможностью создания карточек, их озвучивания, повторения по интервальной системе, а также отслеживания личного прогресса и взаимодействия через Telegram.
________________________________________
Целевая аудитория
Пользователи, изучающие иностранные языки, которые хотят эффективно запоминать слова с помощью карточек, получать напоминания и рекомендации, а также контролировать свои результаты обучения.
________________________________________
Функциональные требования
1. Работа с флеш-карточками
Создание карточек:
●	Добавление карточек с полями:
○	Слово (на иностранном языке)
○	Перевод
○	Пример использования (опционально)
○	Примечание/комментарий (опционально)
Просмотр и тестирование:
●	Просмотр карточек в виде списка.
●	Режим повторения:
○	Перевод с иностранного на родной язык и наоборот.
○	Тест с множественным выбором (опционально).
○	Сопоставление слов и переводов (опционально).
________________________________________
2. Интервальное повторение
Система повторений:
●	Алгоритм планирования повторений (например, SM-2).
●	Учёт успешных и неуспешных ответов при планировании следующих повторений.
●	Возможность вручную изменять дату следующего повторения.
Напоминания:
●	Внутренние уведомления о предстоящем повторении (по дате/времени).
●	Интеграция с Telegram-ботом для напоминаний (см. ниже).
________________________________________
3. Голосовая озвучка
Интеграция с голосовым API:
●	Использование внешнего сервиса озвучивания (Google TTS, Yandex SpeechKit и т.д.).
●	Прослушивание озвучки карточек при просмотре или в тестах.
●	Возможность повторного воспроизведения звука.
________________________________________
4. Прогресс и уровни сложности
Отслеживание прогресса:
●	Хранение статистики:
○	Общее количество слов.
○	Количество успешно выученных.
○	Ошибки в тестах.
○	Количество выполненных повторений.
Уровни сложности:
●	Присвоение карточкам уровней:
○	Начальный
○	Средний
○	Продвинутый
●	Возможность фильтрации по уровню.
●	Генерация рекомендаций (например, «Повтори начальные слова», «Удели больше внимания среднему уровню»).
________________________________________
5. Telegram-бот
Функции бота:
●	Отправка напоминаний: «Пора повторить слова».
●	Команды:
○	/today — слова на сегодня
○	/test — краткий тест в боте
○	/progress — личная статистика
○	/say слово — озвучивание слова через голосовое API
○	/cards — список карточек
Интерактивность (опционально):
●	Использование кнопок для ответа.
●	Поддержка команд в стиле викторины.
________________________________________
База данных
●	Пользователи и их карточки.
●	Статистика повторений и тестов.
●	Расписание повторений.
●	Связь с Telegram-аккаунтом.
●	Лог запросов и ответов бота.
________________________________________
Технологии
●	Backend: Python + Django
●	Frontend: Django templates + Bootstrap (или Tailwind)
●	База данных: SQLite
●	Интервальная логика: собственная или на базе существующих алгоритмов (например, SM-2)
●	TTS API: Google Text-to-Speech, gTTS, Yandex SpeechKit и др.
●	Telegram-бот: aiogram / python-telegram-bot
●	Фоновая логика: Celery (для планировщика повторений и напоминаний)
________________________________________
Критерии успешного выполнения
●	Работает регистрация, создание и просмотр карточек.
●	Есть функционал повторения и тестирования.
●	Повторения планируются автоматически.
●	Прогресс пользователя отображается.
●	Telegram-бот работает и выдаёт данные из системы.
●	Голосовая озвучка интегрирована и работает стабильно.
●	Интерфейс понятный, адаптивный.
________________________________________
Дополнительные возможности (опционально)
●	Расширенное тестирование (ввод с клавиатуры, сопоставление).
●	Возможность настройки индивидуальных интервалов.
●	Экспорт/импорт карточек.
●	Мобильная адаптация интерфейса.
●	Поддержка нескольких языков.
●	Обратная связь на качество озвучки.
План реализации по этапам
Этап 1: Архитектура проекта
●	Создание Django-проекта и базовой структуры
●	Модели: User, Card, Schedule, Stats
Этап 2: Работа с карточками
●	Добавление/редактирование карточек
●	Интерфейс просмотра и фильтрации
●	Список карточек и карточный режим
Этап 3: Интервальное повторение
●	с или своя логика)
●	Учёт результатов
●	Вывод слов на повторение по расписанию
Этап 4: Telegram-бот
●	Настройка aiogram
●	Команды: /test, /today, /progress, /say
●	Подключение Telegram ID к профилю
Этап 5: Озвучка
●	Интеграция с Google TTS / gTTS
●	Кнопка озвучки на карточке и в боте
Этап 6: Прогресс и статистика
●	Хранение статистики повторений
●	Отображение графика прогресса
●	Рекомендации
Этап 7: Финализация
●	Тестирование всех функций
●	Документация
●	Деплой (по желанию)

