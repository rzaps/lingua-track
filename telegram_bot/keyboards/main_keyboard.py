"""
–û—Å–Ω–æ–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –±–æ—Ç–∞
"""

from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton

def get_main_keyboard() -> ReplyKeyboardMarkup:
    """–û—Å–Ω–æ–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –≥–ª–∞–≤–Ω—ã–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏"""
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [
                KeyboardButton(text="üìö –°–ª–æ–≤–∞ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è"),
                KeyboardButton(text="üìù –ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç")
            ],
            [
                KeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"),
                KeyboardButton(text="üóÇ –ö–∞—Ä—Ç–æ—á–∫–∏")
            ],
            [
                KeyboardButton(text="üîä –û–∑–≤—É—á–∏—Ç—å —Å–ª–æ–≤–æ"),
                KeyboardButton(text="‚ùì –ü–æ–º–æ—â—å")
            ],
            [
                KeyboardButton(text="üí¨ –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤")
            ]
        ],
        resize_keyboard=True,
        input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ..."
    )
    return keyboard

def get_test_start_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ç–µ—Å—Ç–∞"""
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="‚úÖ –ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç",
                    callback_data="test_start"
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚ùå –û—Ç–º–µ–Ω–∞",
                    callback_data="test_cancel"
                )
            ]
        ]
    )
    return keyboard

def get_test_answer_keyboard(answers: list, correct_answer: str) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –æ—Ç–≤–µ—Ç–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∞"""
    import random
    
    # –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º –æ—Ç–≤–µ—Ç—ã
    shuffled_answers = answers.copy()
    random.shuffle(shuffled_answers)
    
    keyboard_buttons = []
    for answer in shuffled_answers:
        keyboard_buttons.append([
            InlineKeyboardButton(
                text=answer,
                callback_data=f"test_answer:{answer}"
            )
        ])
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=keyboard_buttons)
    return keyboard

def get_review_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ—Ü–µ–Ω–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è"""
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text="üòû –ó–∞–±—ã–ª", callback_data="review_0"),
                InlineKeyboardButton(text="üòê –°–ª–æ–∂–Ω–æ", callback_data="review_1"),
                InlineKeyboardButton(text="üòä –ü–æ–º–Ω—é", callback_data="review_2")
            ],
            [
                InlineKeyboardButton(text="üòÑ –õ–µ–≥–∫–æ", callback_data="review_3"),
                InlineKeyboardButton(text="ü§© –û—Ç–ª–∏—á–Ω–æ", callback_data="review_4"),
                InlineKeyboardButton(text="üéØ –ò–¥–µ–∞–ª—å–Ω–æ", callback_data="review_5")
            ]
        ]
    )
    return keyboard

def get_cards_navigation_keyboard(page: int, total_pages: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ –∫–∞—Ä—Ç–æ—á–∫–∞–º"""
    keyboard_buttons = []
    
    # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    nav_buttons = []
    if page > 1:
        nav_buttons.append(
            InlineKeyboardButton(text="‚óÄÔ∏è", callback_data=f"cards_page:{page-1}")
        )
    
    nav_buttons.append(
        InlineKeyboardButton(text=f"{page}/{total_pages}", callback_data="cards_info")
    )
    
    if page < total_pages:
        nav_buttons.append(
            InlineKeyboardButton(text="‚ñ∂Ô∏è", callback_data=f"cards_page:{page+1}")
        )
    
    keyboard_buttons.append(nav_buttons)
    
    # –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è
    keyboard_buttons.append([
        InlineKeyboardButton(text="‚ùå –ó–∞–∫—Ä—ã—Ç—å", callback_data="cards_close")
    ])
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=keyboard_buttons)
    return keyboard

def get_yes_no_keyboard() -> InlineKeyboardMarkup:
    """–ü—Ä–æ—Å—Ç–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –î–∞/–ù–µ—Ç"""
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text="‚úÖ –î–∞", callback_data="yes"),
                InlineKeyboardButton(text="‚ùå –ù–µ—Ç", callback_data="no")
            ]
        ]
    )
    return keyboard 